<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.slam.mapper.book.HistoryMapper">

    <select id="selectMatchStatusHistory" resultType="book">
        SELECT /* historyMapper.selectMatchStatusHistory */
               ID
               , TITLE
               , AUTHOR
               , STATUS
               , CREATED_BY
               , CREATED_AT
               , MAIN_IMAGE
          FROM BOOK_HISTORY h
          JOIN BOOK b ON h.BOOK_ID = b.ID
         WHERE REQUESTED_USER = #{username}
           AND REQUESTED_STATUS = #{status}
    </select>

    <select id="selectHistoryById" resultType="bookHistory">
        SELECT /* historyMapper.selectHistoryById */
               BOOK_ID
               , REQUESTED_STATUS
               , STARTED_AT
               , ENDED_AT
               , REQUESTED_USER
               , REQUESTED_AT
          FROM BOOK_HISTORY h
          JOIN BOOK b
            ON h.BOOK_ID = b.id
         WHERE BOOK_ID = #{id}
           AND b.CREATED_BY = #{username}
           AND REQUESTED_STATUS IN ('WAIT_FOR_RESPONSE', 'ON_RESERVED', 'ON_LOAN')
      ORDER BY REQUESTED_AT ASC
         LIMIT 15
    </select>

    <update id="updateBookHistoryToCanceled">
        UPDATE /* historyMapper.updateBookHistoryToCanceled */
               BOOK_HISTORY
           SET REQUESTED_STATUS = CASE
               WHEN 'WAIT_FOR_RESPONSE' THEN 'CANCELED'
               WHEN 'ON_RESERVED' THEN 'WAIT_FOR_RESPONSE'
               ELSE REQUESTED_STATUS
               END
               , ENDED_AT = CASE
               WHEN 'WAIT_FOR_RESPONSE' THEN NOW()
               END
         WHERE BOOK_ID = #{id}
           AND REQUESTED_STATUS IN ('WAIT_FOR_RESPONSE', 'ON_RESERVED')
      ORDER BY REQUESTED_AT ASC
         LIMIT 2
    </update>
    
    <update id="updateBookHistoryToOnLoan">
        UPDATE /* historyMapper.updateBookHistoryToOnLoan */
               BOOK_HISTORY
           SET REQUESTED_STATUS = #{requestedStatus}
               , STARTED_AT = NOW()
         WHERE BOOK_ID = #{bookId}
           AND REQUESTED_STATUS = 'WAIT_FOR_RESPONSE'
    </update>

    <update id="updateBookHistoryToAvailable">
        UPDATE /* historyMapper.updateBookHistoryToAvailable */
               BOOK_HISTORY
           SET REQUESTED_STATUS = #{requestedStatus}
               , ENDED_AT = NOW()
         WHERE BOOK_ID = #{bookId}
           AND REQUESTED_STATUS = 'WAIT_FOR_RESPONSE'
    </update>

</mapper>